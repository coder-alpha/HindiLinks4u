def NormalizeURL(url):	#Log("*********** In MovShare normalizeURL")	# Deal with special providerInfo URL built up by plugin to return	# info about this provider. For all other normal URLs, do nothing. 	#try:	#Log("url-----------" + url)	if url.find('movshare') != -1:		urlf = 'http://www.movshare.net/video/' + url.split('=')[1]	elif url.find('videoweed') != -1:		urlf = 'http://www.videoweed.es/file/' + url.split('=')[1]			url = urlf	#except:	#	url = url	return url		def MetadataObjectForURL(url): 	#Log('In MetadataObjectForURL for MovShare (' + url + ')')	if url.find('movshare') != -1:		title1 = 'MovShare Redirect Page'		summary1 = 'MovShare Redirect Page'	elif url.find('videoweed') != -1:		title1 = 'Videoweed Redirect Page'		summary1 = 'Videoweed Redirect Page'			return VideoClipObject(		title = title1,		summary = summary1,		thumb = None,	)def MediaObjectsForURL(url):	#Log('In MediaObjectsForURL for MovShare (' + url + ')')		return [		MediaObject(			parts = [PartObject(key=Callback(PlayVideo, url=url))],		)	]	@indirect	def PlayVideo(url):	return IndirectResponse(VideoClipObject, key=url)