import re

HTTP_HEADERS = {
	'Accept	text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
	'Accept-Encoding:	gzip, deflate',
	'Accept-Language:	en-US,en;q=0.5',
	'Connection:		keep-alive',
	'Referer:		http://www.played.to',
	'User-Agent:		Mozilla/5.0 (Windows NT 6.1; WOW64; rv:33.0) Gecko/20100101 Firefox/33.0'
}

########################################################################################
def NormalizeURL(url):

	return url

####################################################################################################
def MetadataObjectForURL(url):
	
	page_data = HTML.ElementFromURL(url)
	try:
		html = HTTP.Request(url).content
		r = re.findall(r'<input type="hidden" name="(.+?)"\s* value="(.*?)"', html)
		data = {}
		for name, value in r: data[name] = value
		data.update({'btn_download': 'Continue to Video'})
		html = HTTP.Request(url, data).content
		
		match = re.search('file: "(.+?)"', html)
		if match: url = match.group(1)
		else: url = 'unable to locate video'
		
		match = re.search('image: "(.+?)"', html)
		if match: thumb = match.group(1)
		else: thumb = 'unable to locate video'
		
		match = re.search('duration:"(.+?)"', html)
		if match: dura = int(match.group(1).strip())
		else: dura = 0
	
		# http://62.210.107.50:8777/gmpimkouiwie2cbd4pul5gvcdk2rffn5mmpahcci77mtbooxjyhqq5jba4/v.mp4.flv?start=0
	except:
		url = url
		
	title = 'Played.to Redirect Page'
	summary = 'Summary info Page'
		
	return VideoClipObject(
		title = title,
		summary = summary + '\n\n' + str(dura),
		duration = int(str(dura)),
		thumb = Resource.ContentsOfURLWithFallback(url = thumb, fallback='icon-cover.png'),
		url = url
	)
	
####################################################################################################
def MediaObjectsForURL(url):

	#Log("url-----------" + url)
	
	return [
		MediaObject(
			container = Container.FLV,
			video_codec = VideoCodec.H264,
			video_resolution = '720',
			audio_codec = AudioCodec.AAC,
			audio_channels = 2,
			optimized_for_streaming = True,
			parts = [PartObject(key=Callback(PlayVideo, url=url))]
		)
	]

####################################################################################################
@indirect
def PlayVideo(url):

	try:
		html = HTTP.Request(url).content
		r = re.findall(r'<input type="hidden" name="(.+?)"\s* value="(.*?)"', html)
		data = {}
		for name, value in r: data[name] = value
		data.update({'btn_download': 'Continue to Video'})
		html = HTTP.Request(url, data).content
		match = re.search('file: "(.+?)"', html)
		if match: url = match.group(1)
		else: url = 'unable to locate video'
	
		# http://62.210.107.50:8777/gmpimkouiwie2cbd4pul5gvcdk2rffn5mmpahcci77mtbooxjyhqq5jba4/v.mp4.flv?start=0
	except:
		url = url

	return IndirectResponse(VideoClipObject, key=url)
