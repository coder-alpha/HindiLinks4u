import string, re

HTTP_HEADERS = {
	'Accept	text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
	'Accept-Encoding:	gzip, deflate',
	'Accept-Language:	en-US,en;q=0.5',
	'Connection:		keep-alive',
	'Referer:		http://www.ipithos.to',
	'User-Agent:		Mozilla/5.0 (Windows NT 6.1; WOW64; rv:33.0) Gecko/20100101 Firefox/33.0'
}

########################################################################################
def NormalizeURL(url):

	return url

####################################################################################################
def MetadataObjectForURL(url):
	
	try:
		page_data = HTML.ElementFromURL(url)
		keys = page_data.xpath("//div[@id='player_code']/script/text()")[1]
		keys.replace(u'\u007C','|')

		key = re.findall ( '\|(.*\n?)\|182', keys, re.MULTILINE)[0].split('|')
		key = key[len(key)-1]
		if len(key) == 0:
			key = re.findall ( '\|(.*\n?)182', keys, re.MULTILINE)[0].split('|')
			key = key[len(key)-3]

		dl = re.findall ( '\|(.*\n?)\|file', keys, re.MULTILINE)[0].split('|')
		dl = dl[len(dl)-1]
		
		name4 = keys.split('|')[8]
		name3 = keys.split('|')[9]
		name2 = keys.split('|')[10]
		name1 = keys.split('|')[11]
		
		if name1 == key:
			name1 = ''
		name = name1 + name2 + '.' + name3 + '.' + name4
		
		url0 = 'http://' + dl + '.ipithos.to:182/d/' + key + '/' + name
		# http://dl3.ipithos.to:182/d/r46rm3743o4pc44ujkruegxt3igaynl52x6jia2h4itii7r72kfwp462/Big_Game__2014___In_Hindi_.flv.mp4
	except:
		url0 = url
		
	title = 'Ipithos Redirect Page'
	summary = 'Summary info Page'
		
	return VideoClipObject(
		title = title,
		summary = summary + '\n\n' + url0,
		thumb = Resource.ContentsOfURLWithFallback(url = 'thumb', fallback='icon-cover.png')
	)
	
####################################################################################################
def MediaObjectsForURL(url):

	#Log("url-----------" + url)
	
	return [
		MediaObject(
			container = Container.MP4,
			video_codec = VideoCodec.H264,
			video_resolution = '720',
			audio_codec = AudioCodec.AAC,
			audio_channels = 2,
			optimized_for_streaming = True,
			parts = [PartObject(key=Callback(PlayVideo, url=url))]
		)
	]

####################################################################################################
@indirect
def PlayVideo(url):

	try:
		page_data = HTML.ElementFromURL(url)
		keys = page_data.xpath("//div[@id='player_code']/script/text()")[1]
		keys.replace(u'\u007C','|')

		key = re.findall ( '\|(.*\n?)\|182', keys, re.MULTILINE)[0].split('|')
		key = key[len(key)-1]
		if len(key) == 0:
			key = re.findall ( '\|(.*\n?)182', keys, re.MULTILINE)[0].split('|')
			key = key[len(key)-3]

		dl = re.findall ( '\|(.*\n?)\|file', keys, re.MULTILINE)[0].split('|')
		dl = dl[len(dl)-1]
		
		name4 = keys.split('|')[8]
		name3 = keys.split('|')[9]
		name2 = keys.split('|')[10]
		name1 = keys.split('|')[11]
		
		if name1 == key:
			name1 = ''
		name = name1 + name2 + '.' + name3 + '.' + name4
		
		url0 = 'http://' + dl + '.ipithos.to:182/d/' + key + '/' + name
		# http://dl3.ipithos.to:182/d/r46rm3743o4pc44ujkruegxt3igaynl52x6jia2h4itii7r72kfwp462/Big_Game__2014___In_Hindi_.flv.mp4
	except:
		url0 = url


	return IndirectResponse(VideoClipObject, key=url0)
